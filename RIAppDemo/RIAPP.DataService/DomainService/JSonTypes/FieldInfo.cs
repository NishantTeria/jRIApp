using System;
using System.Runtime.Serialization;
using System.ComponentModel;
using System.Web.Script.Serialization;

namespace RIAPP.DataService
{
    /// <summary>
    /// Stores field description (it's attributes)
    /// </summary>
    [DataContract]
    public class FieldInfo
    {
        public FieldInfo()
        {
            this.isPrimaryKey = 0;
            this.isRowTimeStamp = false;
            this.dataType = DataType.None;
            this.isNullable = true;
            this.maxLength = -1;
            this.isReadOnly = false;
            this.isAutoGenerated = false;
            this.allowClientDefault = false;
            this.dateConversion = DateConversion.None;
            this.isClientOnly = false;
            this.isCalculated = false;
            this.isNavigation = false;
            this.isNeedOriginal = true;
            /*
            this.range = null;
            this.regex = null;
            */
            this._ordinal = -1;
        }

        [DataMember]
        [Description("If this field is primary key then it must be greater then 0")]
        public short isPrimaryKey
        {
            get;
            set;
        }

        [DataMember]
        public bool isRowTimeStamp
        {
            get;
            set;
        }

        [DataMember]
        [Description("Sets the limit on text size, when editing value")]
        public short maxLength
        {
            get;
            set;
        }
       
        /// <summary>
        /// to check values for being inside the allowed range
        /// set range as minBound,maxBound to check for lower and upper bounds
        /// set range as minBound, to check for only lower bound or
        /// set range as ,naxBound to check for only upper bound
        /// as for a example 0,100 or 0, or ,100
        /// for dates format must be yyyy-MM-dd
        /// </summary>
        [DataMember]
        public string range
        {
            get;
            set;
        }

        /// <summary>
        /// to check values with regex expression
        /// set regex that value must match
        /// </summary>
        [DataMember]
        public string regex
        {
            get;
            set;
        }


        [DataMember]
        [Description("Sets value type, for example - Float, String")]
        public DataType dataType
        {
            get;
            set;
        }

        [DataMember]
        public bool isNullable
        {
            get;
            set;
        }

        [DataMember]
        public bool isReadOnly
        {
            get;
            set;
        }

        [DataMember]
        [Description("On insert the value is automatically generated on the server")]
        public bool isAutoGenerated
        {
            get;
            set;
        }

      
        [DataMember]
        [Description("Determines how to convert dates between server and client")]
        public DateConversion dateConversion
        {
            get;
            set;
        }

        [DataMember]
        [Description("Applies when value is set readonly, and means that on insert it's value can be assigned on the client")]
        public bool allowClientDefault
        {
            get;
            set;
        }

        [DataMember]
        public string fieldName
        {
            get;
            set;
        }

        [DataMember]
        public bool isNeedOriginal
        {
            get;
            set;
        }

        [DataMember]
        public bool isClientOnly
        {
            get;
            set;
        }

        [DataMember]
        public bool isCalculated
        {
            get;
            set;
        }


        [DataMember]
        public bool isNavigation
        {
            get;
            set;
        }

        [DataMember]
        public string dependentOn
        {
            get;
            set;
        }

        [IgnoreDataMember]
        [ScriptIgnore]
        public int _ordinal
        {
            get;
            set;
        }

        [IgnoreDataMember]
        [ScriptIgnore]
        public bool _isIncludeInResult
        {
           get{
               return !this.isClientOnly && !this.isCalculated;
           }
        }

        
    }

}
