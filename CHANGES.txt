VERSION CHANGES

VERSION 1.1:

Framework's modules were restructured and tidyed up.
Now the modules are really modules, they register types in their 'THIS' variables on the time of their
execution by the framework.
You can get module's types using app.modules.moduleName.typeName.

P.S. - app.registerType and app.getType methods are still working, but they used rarer in the internals,
and many types which are not used directly by the user code are not registered by registerType method.
Getting types by modules are preferable now.

Constants definition are now moved to their related modules, only global costants which are used in many
modules are preserved global.

Two methods for registering and obtaining the converters are now application's methods (not global's).
You can use app.getConverter and app.registerConverter.

The type BindingContentFactory which creates content types is now can be easily replaced to provide 
user's extended version which can create more content types than the default version. Application exposes
property bindingContentFactory, where you can set your extended version.

global.consts.Key enumeration was renamed to global.consts.KEYS
 

VERSION 1.2.0:
breaking changes:
templates need attribute data-role="template"
the templates which are loaded individually don't need it, but it does not hurt to add it.
It is needed because templates now all need internal preprocessing, and they need to be distinguished not only by their ids.

nonbreaking changes:
 
1) Added dynamic loading of templates from server 
2) Added new element view "dynacontent" which can display templated content with switching of template and dataContext
3) Added new event 'load' to the Global object which is equivalent to jQuery.ready event - only more framework friendly.   
4) And restructured some code


docs will be updated shortly. At present GridDemo has a lot of comments to track new features.


VERSION 1.2.1:

1) After creation all the framework's objects (derived from BaseObject) are sealed, and an attempt to
add new nonexestent property to the object's 'THIS' value will result in error. It is done to control
that the properties on the object which are manipulated are really exist.

2) Now all framework's objects after calling their destroy method has automatically change their _isDestroyCalled field
to true. This is usefull to check that the object is really alive after some asynchronous operation. Because
in between the object can be destroyed.

3) Performed more debugging on the framework. Fixed small bugs and glitches.

4) Added new demo page (SPA demo) to the Demo project. It is done to show the capability to change page views
without reloading whole page, therefore effectively preserving state between views switches. 

docs will be updated shortly. At present GridDemo has a lot of comments to track new features.

VERSION 1.2.2:

1) Code optimization.

2) Two unnoticed bugs were fixed (in utils.check_is methods - for Object and Regexp)

3) utils.cloneObj modified.

4) Element views definitions for DataForm,DataGrid,Pager,StackPanel, Select moved to the respective
modules for the controls which they wrap.

5) Now application instance has loadTemplates method, which is preferable to global.loadTemplates,
because these templates are scoped to the aplication's instance, and each application's instance can have
its own loaded (as a group) templates. 

VERSION 1.2.3:

1) Code optimization.

2) One Bug fix (introduced in version 1.2.2)

VERSION 1.2.4:

1) Optimizations from the server and the client parts to load large json payloads.

VERSION 1.2.4.1:

1) More Optimizations from the server and the client parts to load large json payloads.
2) Renamed two dataGrid methods _sortByColumn to sortByColumn, and _selectRows to selectRows

VERSION 1.2.5.0:

1) Added the feature of registering templates groups which is loaded from the server on as needed basis.
2) Updated Single Page application demo to use templates groups as a method of templates loading.

VERSION 1.2.5.1:

1) Global's load event now executes emmediately when new load event subscriber is added
   after jquery.ready event already had been triggered.

2) When a template's downloading from the server takes more than 250ms - loader's gif appeares on the place
   where the template should be placed when is loaded.

VERSION 1.2.5.2:

1) Code optimizations.

2) Update to BusyElView, so it has delay before showing loader gif. Default is 400 ms. And added to options for it: img and delay.
The first to specify which gif to use, the second is delay before gif will be shown when isBusy property is set to true.

VERSION 1.2.5.3:

1) Code optimizations.

VERSION 1.2.6.0:

1) Templates on loading always appended to template's container element.
2) Styles updates to comply to change #1
3) Bug fix in Data services incrementtal result - key values was not javascript escaped.
4) Example autocomplete was updated to comply to change #1
